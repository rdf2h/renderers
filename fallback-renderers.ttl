@base <http://rdf2h.github.io/generic-rdf2h-Renderers/> .
@prefix gt: <http://rdf2h.github.io/2016/generic-rdf2h-Renderers/> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix r2h: <http://rdf2h.github.io/2015/rdf2h#> .
@prefix dc: <http://purl.org/dc/elements/1.1/>.
@prefix s: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .

<header> a r2h:Renderer;
    r2h:type rdfs:Resource;
    r2h:context r2h:Default;
    r2h:mustache """
      <div class="sticky list-group" style="width: 100%;">
          <h4 class="list-group-item-heading">Resource: <a href="{{.}}">{{.}}</a></h4>
      </div>
      {{#+rdf:type}}
      <div class="sticky list-group" style="width: 100%;">
          <p class="list-group-item-text">is a {{#rdf:type}}<a href="{{.}}">{{.}}</a> {{/rdf:type}}</p>
		  <hr>
      </div>
      {{/+rdf:type}}
      {{{:render . r2h:Default-Naked}}}""".

<genericFullPage> a r2h:Renderer;
    r2h:type rdfs:Resource;
    rdfs:comment """Renders a full page, delegating to renderers in the default 
    context for the body, and to gt:HtmlHead for things like the html title""";
    r2h:context gt:FullPage;
    r2h:mustache """
    {{{@prefix r2h: <http://rdf2h.github.io/2015/rdf2h#>}}}
    {{{@prefix gt: <http://rdf2h.github.io/2016/generic-rdf2h-Renderers/>}}}
    <head>
      {{{:render . gt:HtmlHead}}}
    </head>
    <body>
      {{{:render . gt:HtmlBody}}}
    </body>
    """.
<genericBody> a r2h:Renderer;
    r2h:type rdfs:Resource;
    r2h:context gt:HtmlBody;
    r2h:mustache """<div id="header"></div>
        {{{:render . r2h:Default}}}<div id="footer">

        </div>""".

<genericHead> a r2h:Renderer;
    r2h:type rdfs:Resource;
    r2h:context gt:HtmlHead;
    r2h:mustache """
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" />
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
        {{{:render . gt:HtmlTitle}}}
    """.

<genericHtmlTitle> a r2h:Renderer;
    r2h:type rdfs:Resource;
    r2h:context gt:HtmlTitle;
    r2h:mustache """
        <title>Resource {{.}}</title>
    """.

<genericResource> a r2h:Renderer;
    r2h:type rdfs:Resource;
    r2h:context r2h:Default-Naked;
    r2h:javaScript """
        var prefixes = [{url: "http://schema.org/", shortcut: "s:"},
                        {url: "http://www.w3.org/1999/02/22-rdf-syntax-ns#", shortcut: "rdf:"},
                        {url: "https://gont.ch/", shortcut: "gont:"},
                        {url: "http://www.w3.org/2004/02/skos/core#", shortcut: "skos:"},
                        {url: "http://www.w3.org/2002/07/owl#", shortcut: "owl:"},
                        {url: "http://dbpedia.org/resource/", shortcut: "dbr:"},
                        {url: "http://dbpedia.org/class/yago/", shortcut: "yago:"},
                        {url: "http://xmlns.com/foaf/0.1/", shortcut: "foaf:"},
                        {url: "http://www.wikidata.org/entity/", shortcut: "wikidata:"},
                        {url: "http://dbpedia.org/ontology/", shortcut: "dbo:"},
                        {url: "http://purl.org/dc/terms/", shortcut: "dct:"},
                        {url: "http://www.w3.org/2000/01/rdf-schema#", shortcut: "rdfs:"}];
        var result = "";
        var predicatesArray = [];
        var nodesToRender = [];
        //should rather attach this to something specific to this RDF2h invocation
		if (!window.renderedNodesToId)  {
			window.renderedNodesToId = new Object();
		}
        var node = n.node;
        var s = n.graph.match(node, undefined, undefined);
        if (s.length > 0) {
           window.renderedNodesToId[node.toString()] = true;
           result += '<div class="container" id="'+node+'"><table width="100%">';
           s.forEach(function(t) {
            var objectHtml;
            var prefix = "";
            var predicate = t.predicate.value;
            var link = predicate;
            prefixes.forEach(function(p) {
                var predicateHtml = predicate.split(p.url);
                if (predicateHtml[0] === "") {
                    prefix = p.shortcut;
                    predicate = predicateHtml[1];
                }
            });
            if (t.object.termType !== "Literal") {
                nodesToRender.push(t.object);
                if (t.object.termType == "BlankNode") {
                    objectHtml = '<div class="moving"></div><a onclick=\\'document.getElementById('+
                        t.object+'").scrollIntoView( true );\\'>'+t.object+'</a>';
                } else {
                    var objectPrefix = "";
                    var object = t.object.value.replace(/&/g,"&amp;");
                    var objectLink = object;
                    prefixes.forEach(function(p) {
                        var objectSplit = object.split(p.url);
                        if (objectSplit[0] === "") {
                            objectPrefix = p.shortcut;
                            object = objectSplit[1];
                        }
                    });
                    if (objectPrefix === "") {
                        objectHtml = '<a href="'+objectLink+'" title="'+object+'">'+object+'</a>';
                    } else {
                        objectHtml = '<a href="'+objectLink+'" title="'+object+
                            '" style="color:#000000;text-decoration:none">'+
                            objectPrefix+'<b>'+object+'</b></a>';
                    }
                }
            } else {
                objectHtml = t.object;
            }
            var isNew = true;
            for (var i = 0; i < predicatesArray.length; i++) {
                if (predicatesArray[i] === predicate) {
                    isNew = false;
                    break;
                }
            }
            predicatesArray.push(predicate);

            result += '<tr><td width="35%" cellpadding=".1em" valign="top">'+
                '<a href="'+link+'" title="'+link+'" style="color:#000000;text-decoration:none">'+
                prefix+'<b>!'+predicate+'</b></a></td><td width="65%" cellpadding=".1em">'+
                objectHtml+'<hr /></td>';

            });
           result += '</table></div>';
        };
        while (nodesToRender.length > 0) {
            var subNode = nodesToRender.pop();
            if ((n.graph.match(subNode, undefined, undefined).length > 0) && 
                (!window.renderedNodesToId[subNode.toString()])) {
		result += render(GraphNode(subNode, n.graph), $rdf.sym("http://rdf2h.github.io/2015/rdf2h#Default"));
            }
	}
        console.log("getting subjects for"+node);
        var backwardLinks = n.graph.match(undefined, undefined, node);
        backwardLinks.forEach(function(t) {
            var subjectNode = t.subject;
            console.log(subjectNode);
            if (!window.renderedNodesToId[subjectNode.toString()]) {
                result += render(GraphNode(subjectNode, n.graph), $rdf.sym("http://rdf2h.github.io/2015/rdf2h#Default"));
            }
        })
        return result;
    """.
